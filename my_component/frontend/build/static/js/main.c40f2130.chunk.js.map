{"version":3,"sources":["MyComponent.tsx","index.tsx"],"names":["MyComponent","props","state","audioDetails","url","blob","chunks","duration","h","m","s","data","console","log","this","setState","file","record","title","audioURL","showUIAudio","handleAudioStop","handleAudioUpload","handleReset","mimeTypeToUseWhenRecording","React","Component","withStreamlitConnection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAYMA,G,wDACJ,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACXC,aAAc,CACZC,IAAK,KACLC,KAAM,KACNC,OAAQ,KACRC,SAAU,CACRC,EAAG,EACHC,EAAG,EACHC,EAAG,KAVa,E,mDAgBxB,SAAgBC,GACdC,QAAQC,IAAIF,GACZG,KAAKC,SAAS,CAAEZ,aAAcQ,M,+BAEhC,SAAkBK,GAChBJ,QAAQC,IAAIG,K,yBAEd,WAWEF,KAAKC,SAAS,CAAEZ,aAVF,CACZC,IAAK,KACLC,KAAM,KACNC,OAAQ,KACRC,SAAU,CACRC,EAAG,EACHC,EAAG,EACHC,EAAG,Q,oBAKT,WAAU,IAAD,OACP,OACE,kBAAC,IAAD,CACEO,QAAQ,EACRC,MAAO,gBACPC,SAAUL,KAAKZ,MAAMC,aAAaC,IAClCgB,aAAW,EACXC,gBAAiB,SAACV,GAAD,OAAe,EAAKU,gBAAgBV,IACrDW,kBAAmB,SAACX,GAAD,OAAe,EAAKW,kBAAkBX,IACzDY,YAAa,kBAAM,EAAKA,eACxBC,2BAA0B,mB,GA/CRC,IAAMC,YAsDjBC,cAAwB3B,GC7DvC4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c40f2130.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\nimport React from 'react'\n\nimport { Recorder } from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\n\n\nclass MyComponent extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      audioDetails: {\n        url: null,\n        blob: null,\n        chunks: null,\n        duration: {\n          h: 0,\n          m: 0,\n          s: 0\n        }\n      }\n    }\n  }\n\n  handleAudioStop(data: any) {\n    console.log(data);\n    this.setState({ audioDetails: data });\n  }\n  handleAudioUpload(file: any ) {\n    console.log(file);\n  }\n  handleReset() {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    };\n    this.setState({ audioDetails: reset });\n  }\n  render() {\n    return (\n      <Recorder\n        record={true}\n        title={\"New recording\"}\n        audioURL={this.state.audioDetails.url}\n        showUIAudio\n        handleAudioStop={(data: any) => this.handleAudioStop(data)}\n        handleAudioUpload={(data: any) => this.handleAudioUpload(data)}\n        handleReset={() => this.handleReset()}\n        mimeTypeToUseWhenRecording={`audio/webm`}\n      />\n    )\n  }\n}\n\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(MyComponent)\n","import './index.css'\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MyComponent from \"./MyComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}