{"version":3,"sources":["_MyComponent.tsx","index.tsx"],"names":["withStreamlitConnection","audio","render","status","startRecording","stopRecording","mediaBlobUrl","onClick","src","controls","autoPlay","loop","Streamlit","setComponentReady","ReactDOM","StrictMode","document","getElementById"],"mappings":"sMA0BeA,eAjBO,kBACpB,6BACE,kBAAC,qBAAD,CACEC,OAAK,EACLC,OAAQ,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,eAAgBC,EAA3B,EAA2BA,cAAeC,EAA1C,EAA0CA,aAA1C,OACN,6BACE,2BAAIH,GACJ,4BAAQI,QAASH,GAAjB,mBACA,4BAAQG,QAASF,GAAjB,kBACA,2BAAOG,IAAKF,EAAcG,UAAQ,EAACC,UAAQ,EAACC,MAAI,YAa1DC,IAAUC,oBC3BVC,IAASZ,OACP,kBAAC,IAAMa,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9007b780.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\nimport React from \"react\"\nimport { ReactMediaRecorder } from \"react-media-recorder\";\n\nconst AudioRecorder = () => (\n  <div>\n    <ReactMediaRecorder\n      audio\n      render={({ status, startRecording, stopRecording, mediaBlobUrl }) => (\n        <div>\n          <p>{status}</p>\n          <button onClick={startRecording}>Start Recording</button>\n          <button onClick={stopRecording}>Stop Recording</button>\n          <audio src={mediaBlobUrl} controls autoPlay loop />\n        </div>\n      )}\n    />\n  </div>\n);\n\n// export an object of class MyComponent!\nexport default withStreamlitConnection(AudioRecorder)\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport AudioRecorder from \"./_MyComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AudioRecorder />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}