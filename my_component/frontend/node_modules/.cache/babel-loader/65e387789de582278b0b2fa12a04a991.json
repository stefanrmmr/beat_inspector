{"ast":null,"code":"var _jsxFileName = \"/Users/stefan_rmmr/software_dev/beat_inspector/my_component/frontend/src/MyComponent.tsx\";\nimport React from 'react';\nimport { Recorder } from 'react-voice-recorder';\nimport 'react-voice-recorder/dist/index.css';\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      audioDetails: {\n        url: null,\n        blob: null,\n        chunks: null,\n        duration: {\n          h: 0,\n          m: 0,\n          s: 0\n        }\n      }\n    };\n  }\n\n  handleAudioStop(data) {\n    console.log(data);\n    this.setState({\n      audioDetails: data\n    });\n  }\n\n  handleAudioUpload(file) {\n    console.log(file);\n  }\n\n  handleReset() {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    };\n    this.setState({\n      audioDetails: reset\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Recorder, {\n      record: true,\n      title: \"New recording\",\n      audioURL: this.state.audioDetails.url,\n      showUIAudio: true,\n      handleAudioStop: data => this.handleAudioStop(data),\n      handleAudioUpload: data => this.handleAudioUpload(data),\n      handleReset: () => this.handleReset(),\n      mimeTypeToUseWhenRecording: `audio/webm`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["/Users/stefan_rmmr/software_dev/beat_inspector/my_component/frontend/src/MyComponent.tsx"],"names":["React","Recorder","MyComponent","Component","constructor","props","state","audioDetails","url","blob","chunks","duration","h","m","s","handleAudioStop","data","console","log","setState","handleAudioUpload","file","handleReset","reset","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAO,qCAAP;;AAWA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAwD;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AACZC,QAAAA,GAAG,EAAE,IADO;AAEZC,QAAAA,IAAI,EAAE,IAFM;AAGZC,QAAAA,MAAM,EAAE,IAHI;AAIZC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,CAAC,EAAE,CADK;AAERC,UAAAA,CAAC,EAAE,CAFK;AAGRC,UAAAA,CAAC,EAAE;AAHK;AAJE;AADH,KAAb;AAYD;;AAEDC,EAAAA,eAAe,CAACC,IAAD,EAAO;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAKG,QAAL,CAAc;AAAEZ,MAAAA,YAAY,EAAES;AAAhB,KAAd;AACD;;AACDI,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD;;AACDC,EAAAA,WAAW,GAAG;AACZ,UAAMC,KAAK,GAAG;AACZf,MAAAA,GAAG,EAAE,IADO;AAEZC,MAAAA,IAAI,EAAE,IAFM;AAGZC,MAAAA,MAAM,EAAE,IAHI;AAIZC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,CAAC,EAAE,CADK;AAERC,QAAAA,CAAC,EAAE,CAFK;AAGRC,QAAAA,CAAC,EAAE;AAHK;AAJE,KAAd;AAUA,SAAKK,QAAL,CAAc;AAAEZ,MAAAA,YAAY,EAAEgB;AAAhB,KAAd;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE,IADV;AAEE,MAAA,KAAK,EAAE,eAFT;AAGE,MAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWC,YAAX,CAAwBC,GAHpC;AAIE,MAAA,WAAW,MAJb;AAKE,MAAA,eAAe,EAAEQ,IAAI,IAAI,KAAKD,eAAL,CAAqBC,IAArB,CAL3B;AAME,MAAA,iBAAiB,EAAEA,IAAI,IAAI,KAAKI,iBAAL,CAAuBJ,IAAvB,CAN7B;AAOE,MAAA,WAAW,EAAE,MAAM,KAAKM,WAAL,EAPrB;AAQE,MAAA,0BAA0B,EAAG,YAR/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD;;AAlDqD;;AAqDxD,eAAepB,WAAf","sourcesContent":["import React from 'react'\n\nimport { Recorder } from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\n\n\n\n\n\n\ninterface Props {}\ninterface State {}\n\n\nclass MyComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      audioDetails: {\n        url: null,\n        blob: null,\n        chunks: null,\n        duration: {\n          h: 0,\n          m: 0,\n          s: 0\n        }\n      }\n    }\n  }\n\n  handleAudioStop(data) {\n    console.log(data);\n    this.setState({ audioDetails: data });\n  }\n  handleAudioUpload(file) {\n    console.log(file);\n  }\n  handleReset() {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    };\n    this.setState({ audioDetails: reset });\n  }\n  render() {\n    return (\n      <Recorder\n        record={true}\n        title={\"New recording\"}\n        audioURL={this.state.audioDetails.url}\n        showUIAudio\n        handleAudioStop={data => this.handleAudioStop(data)}\n        handleAudioUpload={data => this.handleAudioUpload(data)}\n        handleReset={() => this.handleReset()}\n        mimeTypeToUseWhenRecording={`audio/webm`}\n      />\n    )\n  }\n}\n\nexport default MyComponent\n"]},"metadata":{},"sourceType":"module"}