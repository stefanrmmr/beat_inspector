{"ast":null,"code":"import React__default, { Component } from 'react';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar styles = {\n  \"recorder_library_box\": \"_1ceqH\",\n  \"recorder_box\": \"_2fG9h\",\n  \"recorder_box_inner\": \"_dt3-T\",\n  \"mic_icon\": \"_1dpop\",\n  \"microphone_icon_sec\": \"_3neb0\",\n  \"mic_icon_svg\": \"_3wi1g\",\n  \"reco_header\": \"_1lB9c\",\n  \"h2\": \"_2N9dq\",\n  \"close_icons\": \"_3-aC9\",\n  \"record_section\": \"_3bC73\",\n  \"duration_section\": \"_1YOWG\",\n  \"btn_wrapper\": \"_1Yplu\",\n  \"btn\": \"_1Pz2d\",\n  \"clear_btn\": \"_2gd2_\",\n  \"upload_btn\": \"_37kfa\",\n  \"duration\": \"_f2DT8\",\n  \"recorder_page_box\": \"_17RTH\",\n  \"help\": \"_eV_dK\",\n  \"record_controller\": \"_qxztz\",\n  \"icons\": \"_2uz65\",\n  \"stop\": \"_1bSom\",\n  \"pause\": \"_3nQu5\",\n  \"play_icons\": \"_3O0Io\",\n  \"pause_icons\": \"_2ACrw\",\n  \"stop_icon\": \"_oEOY-\"\n};\nvar audioType = 'audio/*';\n\nvar Recorder = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Recorder, _Component);\n\n  function Recorder(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null,\n      stream: null\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Recorder.prototype;\n\n  _proto.handleAudioPause = function handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({\n      pauseRecord: true\n    });\n  };\n\n  _proto.handleAudioStart = function handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({\n      pauseRecord: false\n    });\n  };\n\n  _proto.startTimer = function startTimer() {\n    this.timer = setInterval(this.countDown, 100);\n  };\n\n  _proto.countDown = function countDown() {\n    var _this2 = this;\n\n    this.setState(function (prevState) {\n      var miliseconds = prevState.miliseconds + 100;\n      return {\n        time: _this2.milisecondsToTime(miliseconds),\n        miliseconds: miliseconds\n      };\n    });\n\n    if (this.props.handleCountDown) {\n      this.props.handleCountDown(this.state.time);\n    }\n  };\n\n  _proto.milisecondsToTime = function milisecondsToTime(milisecs) {\n    var secs = milisecs / 1000;\n    var hours = Math.floor(secs / (60 * 60));\n    var divisor_for_minutes = secs % (60 * 60);\n    var minutes = Math.floor(divisor_for_minutes / 60);\n    var divisor_for_seconds = divisor_for_minutes % 60;\n    var seconds = Math.ceil(divisor_for_seconds);\n    var obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n      ms: milisecs\n    };\n    return obj;\n  };\n\n  _proto.initRecorder = function initRecorder() {\n    try {\n      var _this4 = this;\n\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n      var _temp2 = function () {\n        if (navigator.mediaDevices) {\n          return Promise.resolve(navigator.mediaDevices.getUserMedia({\n            audio: true\n          })).then(function (stream) {\n            if (_this4.props.mimeTypeToUseWhenRecording) {\n              _this4.mediaRecorder = new MediaRecorder(stream, {\n                mimeType: _this4.props.mimeTypeToUseWhenRecording\n              });\n            } else {\n              _this4.mediaRecorder = new MediaRecorder(stream);\n            }\n\n            _this4.chunks = [];\n\n            _this4.mediaRecorder.ondataavailable = function (e) {\n              if (e.data && e.data.size > 0) {\n                _this4.chunks.push(e.data);\n              }\n            };\n\n            _this4.stream = stream;\n          });\n        } else {\n          _this4.setState({\n            medianotFound: true\n          });\n\n          console.log('Media Decives will work only with SSL.....');\n        }\n      }();\n\n      return Promise.resolve(_temp2 && _temp2.then ? _temp2.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.startRecording = function startRecording(e) {\n    try {\n      var _this6 = this;\n\n      e.preventDefault();\n      _this6.chunks = [];\n      return Promise.resolve(_this6.initRecorder()).then(function () {\n        _this6.mediaRecorder.start(10);\n\n        _this6.startTimer();\n\n        _this6.setState({\n          recording: true\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.stopRecording = function stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({\n      time: {}\n    });\n    e.preventDefault();\n\n    if (this.stream.getAudioTracks) {\n      var tracks = this.stream.getAudioTracks();\n      tracks.forEach(function (track) {\n        track.stop();\n      });\n    } else {\n      console.log('No Tracks Found');\n    }\n\n    this.mediaRecorder.stop();\n    this.setState({\n      recording: false,\n      pauseRecord: false\n    });\n    this.saveAudio();\n  };\n\n  _proto.handleReset = function handleReset(e) {\n    var _this7 = this;\n\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n\n    this.setState({\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, function () {\n      _this7.props.handleReset(_this7.state);\n    });\n  };\n\n  _proto.saveAudio = function saveAudio() {\n    var blob = new Blob(this.chunks, {\n      type: audioType\n    });\n    var audioURL = window.URL.createObjectURL(blob);\n    var audios = [audioURL];\n    this.setState({\n      audios: audios,\n      audioBlob: blob\n    });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  };\n\n  _proto.render = function render() {\n    var _this8 = this;\n\n    var _this$state = this.state,\n        recording = _this$state.recording,\n        audios = _this$state.audios,\n        time = _this$state.time,\n        medianotFound = _this$state.medianotFound,\n        pauseRecord = _this$state.pauseRecord;\n    var _this$props = this.props,\n        showUIAudio = _this$props.showUIAudio,\n        title = _this$props.title,\n        audioURL = _this$props.audioURL,\n        disableFullUI = _this$props.disableFullUI;\n\n    if (disableFullUI) {\n      return null;\n    }\n\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_library_box\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_box\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_box_inner\n    }, !this.props.hideHeader ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.reco_header\n    }, /*#__PURE__*/React__default.createElement(\"h2\", {\n      className: styles.h2\n    }, title), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.close_icons\n    })) : null, !medianotFound ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.record_section\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.btn_wrapper\n    }, /*#__PURE__*/React__default.createElement(\"button\", {\n      onClick: function onClick() {\n        return _this8.props.handleAudioUpload(_this8.state.audioBlob);\n      },\n      className: styles.btn + \" \" + styles.upload_btn,\n      disabled: this.props.uploadButtonDisabled\n    }, \"Upload\"), /*#__PURE__*/React__default.createElement(\"button\", {\n      onClick: function onClick(e) {\n        return _this8.handleReset(e);\n      },\n      className: styles.btn + \" \" + styles.clear_btn\n    }, \"Clear\")), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.duration_section\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.audio_section\n    }, audioURL !== null && showUIAudio ? /*#__PURE__*/React__default.createElement(\"audio\", {\n      controls: true\n    }, /*#__PURE__*/React__default.createElement(\"source\", {\n      src: audios[0],\n      type: \"audio/ogg\"\n    }), /*#__PURE__*/React__default.createElement(\"source\", {\n      src: audios[0],\n      type: \"audio/mpeg\"\n    })) : null), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.duration\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.mins\n    }, time.m !== undefined ? \"\" + (time.m <= 9 ? '0' + time.m : time.m) : '00'), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.divider\n    }, \":\"), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.secs\n    }, time.s !== undefined ? \"\" + (time.s <= 9 ? '0' + time.s : time.s) : '00')), !recording ? /*#__PURE__*/React__default.createElement(\"p\", {\n      className: styles.help\n    }, \"Press the microphone to record\") : null), !recording ? /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: function onClick(e) {\n        return _this8.startRecording(e);\n      },\n      href: \" #\",\n      className: styles.mic_icon\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.microphone_icon_sec\n    }, /*#__PURE__*/React__default.createElement(\"svg\", {\n      className: styles.mic_icon_svg,\n      version: \"1.1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      x: \"0px\",\n      y: \"0px\",\n      viewBox: \"0 0 1000 1000\",\n      enableBackground: \"new 0 0 1000 1000\"\n    }, /*#__PURE__*/React__default.createElement(\"g\", null, /*#__PURE__*/React__default.createElement(\"path\", {\n      d: \"M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z\"\n    }))))) : /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.record_controller\n    }, /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: function onClick(e) {\n        return _this8.stopRecording(e);\n      },\n      href: \" #\",\n      className: styles.icons + \" \" + styles.stop\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.stop_icon\n    })), /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: !pauseRecord ? function (e) {\n        return _this8.handleAudioPause(e);\n      } : function (e) {\n        return _this8.handleAudioStart(e);\n      },\n      href: \" #\",\n      className: styles.icons + \" \" + styles.pause\n    }, pauseRecord ? /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.play_icons\n    }) : /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.pause_icons\n    })))) : /*#__PURE__*/React__default.createElement(\"p\", {\n      style: {\n        color: '#fff',\n        marginTop: 30,\n        fontSize: 25\n      }\n    }, \"Seems the site is Non-SSL\"))));\n  };\n\n  return Recorder;\n}(Component);\n\nRecorder.defaultProps = {\n  hideHeader: false,\n  mimeTypeToUseWhenRecording: null,\n  handleCountDown: function handleCountDown(data) {}\n};\nexport { Recorder };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,SAAS,GAAG,SAAlB;;IAEMC;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AACjBC,kCAAMD,KAAN;AACAC,UAAKC,KAAL,GAAa;AACXC,UAAI,EAAE,EADK;AAEXC,iBAAW,EAAE,CAFF;AAGXC,eAAS,EAAE,KAHA;AAIXC,mBAAa,EAAE,KAJJ;AAKXC,YAAM,EAAE,EALG;AAMXC,eAAS,EAAE,IANA;AAOXC,YAAM,EAAE;AAPG,KAAb;AASAR,UAAKS,KAAL,GAAa,CAAb;AACAT,UAAKU,UAAL,GAAkBV,MAAKU,UAAL,CAAgBC,IAAhB,+BAAlB;AACAX,UAAKY,SAAL,GAAiBZ,MAAKY,SAAL,CAAeD,IAAf,+BAAjB;AAbiB;AAclB;;;;SAEDE,6CAAiBC,CAAjB,EAAoB;AAClBA,KAAC,CAACC,cAAFD;AACAE,iBAAa,CAAC,KAAKP,KAAN,CAAbO;AACA,SAAKC,aAAL,CAAmBC,KAAnB;AACA,SAAKC,QAAL,CAAc;AAAEC,iBAAW,EAAE;AAAf,KAAd;AACD;;SAEDC,6CAAiBP,CAAjB,EAAoB;AAClBA,KAAC,CAACC,cAAFD;AACA,SAAKJ,UAAL;AACA,SAAKO,aAAL,CAAmBK,MAAnB;AACA,SAAKH,QAAL,CAAc;AAAEC,iBAAW,EAAE;AAAf,KAAd;AACD;;SAEDV,mCAAa;AAEX,SAAKD,KAAL,GAAac,WAAW,CAAC,KAAKX,SAAN,EAAiB,GAAjB,CAAxB;AAED;;SAEDA,iCAAY;AAAA;;AAGV,SAAKO,QAAL,CAAc,qBAAa;AACzB,UAAMhB,WAAW,GAAGqB,SAAS,CAACrB,WAAVqB,GAAwB,GAA5C;AACA,aAAQ;AAAEtB,YAAI,EAAEuB,MAAI,CAACC,iBAAL,CAAuBvB,WAAvB,CAAR;AAA6CA,mBAAW,EAAEA;AAA1D,OAAR;AAFF;;AAKA,QAAG,KAAKJ,KAAL,CAAW4B,eAAd,EAA8B;AAC5B,WAAK5B,KAAL,CAAW4B,eAAX,CAA2B,KAAK1B,KAAL,CAAWC,IAAtC;AACD;AAEF;;SAEDwB,+CAAkBE,QAAlB,EAA4B;AAE1B,QAAIC,IAAI,GAAGD,QAAQ,GAAG,IAAtB;AACA,QAAIE,KAAK,GAAGC,IAAI,CAACC,KAALD,CAAWF,IAAI,IAAI,KAAK,EAAT,CAAfE,CAAZ;AAEA,QAAIE,mBAAmB,GAAGJ,IAAI,IAAI,KAAK,EAAT,CAA9B;AACA,QAAIK,OAAO,GAAGH,IAAI,CAACC,KAALD,CAAWE,mBAAmB,GAAG,EAAjCF,CAAd;AAEA,QAAII,mBAAmB,GAAGF,mBAAmB,GAAG,EAAhD;AACA,QAAIG,OAAO,GAAGL,IAAI,CAACM,IAALN,CAAUI,mBAAVJ,CAAd;AAGA,QAAIO,GAAG,GAAG;AACRC,OAAC,EAAET,KADK;AAERU,OAAC,EAAEN,OAFK;AAGRO,OAAC,EAAEL,OAHK;AAIRM,QAAE,EAAEd;AAJI,KAAV;AAMA,WAAOU,GAAP;AACD;;SAEKK;QAAe;AAAA,mBAQb,IARa;;AACnBC,eAAS,CAACC,YAAVD,GACAA,SAAS,CAACC,YAAVD,IACAA,SAAS,CAACE,kBADVF,IAEAA,SAAS,CAACG,eAFVH,IAGAA,SAAS,CAACI,cAJVJ;;AADmB;AAAA,YAMfA,SAAS,CAACK,YANK;AAAA,iCAOIL,SAAS,CAACK,YAAVL,CAAuBC,YAAvBD,CAAoC;AAAEM,iBAAK,EAAE;AAAT,WAApCN,CAPJ,iBAOXpC,MAPW;AAQjB,gBAAI2C,OAAKpD,KAAL,CAAWqD,0BAAf,EAA2C;AACzCD,qBAAKlC,aAAL,GAAqB,IAAIoC,aAAJ,CAAkB7C,MAAlB,EAA0B;AAAE8C,wBAAQ,EAAEH,OAAKpD,KAAL,CAAWqD;AAAvB,eAA1B,CAArB;AADF,mBAEO;AACLD,qBAAKlC,aAAL,GAAqB,IAAIoC,aAAJ,CAAkB7C,MAAlB,CAArB;AACD;;AACD2C,mBAAKI,MAAL,GAAc,EAAd;;AACAJ,mBAAKlC,aAAL,CAAmBuC,eAAnB,GAAqC,aAAK;AACxC,kBAAI1C,CAAC,CAAC2C,IAAF3C,IAAUA,CAAC,CAAC2C,IAAF3C,CAAO4C,IAAP5C,GAAc,CAA5B,EAA+B;AAC7BqC,uBAAKI,MAAL,CAAYI,IAAZ,CAAiB7C,CAAC,CAAC2C,IAAnB;AACD;AAHH;;AAMAN,mBAAK3C,MAAL,GAAcA,MAAd;AApBiB;AAAA;AAsBjB2C,iBAAKhC,QAAL,CAAc;AAAEd,yBAAa,EAAE;AAAjB,WAAd;;AACAuD,iBAAO,CAACC,GAARD,CAAY,4CAAZA;AAvBiB;AAAA;;AAAA;AAyBpB;;;;;SAEKE,yCAAehD,CAAfgD,EAAehD;QAAG;AAAA,mBAGtB,IAHsB;;AACtBA,OAAC,CAACC,cAAFD;AAEAiD,aAAKR,MAAL,GAAc,EAAd;AAHsB,6BAKhBQ,OAAKpB,YAAL,EALgB;AAOtBoB,eAAK9C,aAAL,CAAmB+C,KAAnB,CAAyB,EAAzB;;AACAD,eAAKrD,UAAL;;AAEAqD,eAAK5C,QAAL,CAAc;AAAEf,mBAAS,EAAE;AAAb,SAAd;AAVsB;AAWvB;;;;;SAED6D,uCAAcnD,CAAd,EAAiB;AACfE,iBAAa,CAAC,KAAKP,KAAN,CAAbO;AACA,SAAKG,QAAL,CAAc;AAAEjB,UAAI,EAAE;AAAR,KAAd;AACAY,KAAC,CAACC,cAAFD;;AAGA,QAAI,KAAKN,MAAL,CAAY0D,cAAhB,EAAgC;AAC9B,UAAMC,MAAM,GAAG,KAAK3D,MAAL,CAAY0D,cAAZ,EAAf;AACAC,YAAM,CAACC,OAAPD,CAAe,UAACE,KAAD,EAAW;AACxBA,aAAK,CAACC,IAAND;AADF;AAFF,WAKO;AACLT,aAAO,CAACC,GAARD,CAAY,iBAAZA;AACD;;AAED,SAAK3C,aAAL,CAAmBqD,IAAnB;AAGA,SAAKnD,QAAL,CAAc;AAAEf,eAAS,EAAE,KAAb;AAAoBgB,iBAAW,EAAE;AAAjC,KAAd;AAEA,SAAKmD,SAAL;AACD;;SAEDC,mCAAY1D,CAAZ,EAAe;AAAA;;AACb,QAAI,KAAKb,KAAL,CAAWG,SAAf,EAA0B;AACxB,WAAK6D,aAAL,CAAmBnD,CAAnB;AACD;;AACD,SAAKK,QAAL,CAAc;AACZjB,UAAI,EAAE,EADM;AAEZC,iBAAW,EAAE,CAFD;AAGZC,eAAS,EAAE,KAHC;AAIZC,mBAAa,EAAE,KAJH;AAKZC,YAAM,EAAE,EALI;AAMZC,eAAS,EAAE;AANC,KAAd,EAOG,YAAM;AAEPkE,YAAI,CAAC1E,KAAL,CAAWyE,WAAX,CAAuBC,MAAI,CAACxE,KAA5B;AATF;AAYD;;SAEDsE,iCAAY;AAEV,QAAMG,IAAI,GAAG,IAAIC,IAAJ,CAAS,KAAKpB,MAAd,EAAsB;AAAEqB,UAAI,EAAE/E;AAAR,KAAtB,CAAb;AAEA,QAAMgF,QAAQ,GAAGC,MAAM,CAACC,GAAPD,CAAWE,eAAXF,CAA2BJ,IAA3BI,CAAjB;AAEA,QAAMxE,MAAM,GAAG,CAACuE,QAAD,CAAf;AACA,SAAK1D,QAAL,CAAc;AAAEb,YAAM,EAANA,MAAF;AAAUC,eAAS,EAAEmE;AAArB,KAAd;AACA,SAAK3E,KAAL,CAAWkF,eAAX,CAA2B;AACzBC,SAAG,EAAEL,QADoB;AAEzBH,UAAI,EAAEA,IAFmB;AAGzBnB,YAAM,EAAE,KAAKA,MAHY;AAIzB4B,cAAQ,EAAE,KAAKlF,KAAL,CAAWC;AAJI,KAA3B;AAMD;;SAEDkF,2BAAS;AAAA;;AAAA,sBACyD,KAAKnF,KAD9D;AAAA,QACCG,SADD,eACCA,SADD;AAAA,QACYE,MADZ,eACYA,MADZ;AAAA,QACoBJ,IADpB,eACoBA,IADpB;AAAA,QAC0BG,aAD1B,eAC0BA,aAD1B;AAAA,QACyCe,WADzC,eACyCA,WADzC;AAAA,sBAEiD,KAAKrB,KAFtD;AAAA,QAECsF,WAFD,eAECA,WAFD;AAAA,QAEcC,KAFd,eAEcA,KAFd;AAAA,QAEqBT,QAFrB,eAEqBA,QAFrB;AAAA,QAE+BU,aAF/B,eAE+BA,aAF/B;;AAIP,QAAIA,aAAJ,EAAmB;AAAE,aAAO,IAAP;AAAc;;AAEnC,wBACEC;AAAKC,eAAS,EAAEC,MAAM,CAACC;AAAvBH,oBACEA;AAAKC,eAAS,EAAEC,MAAM,CAACE;AAAvBJ,oBACEA;AAAKC,eAAS,EAAEC,MAAM,CAACG;AAAvBL,OAEI,CAAC,KAAKzF,KAAL,CAAW+F,UAAZ,gBACEN;AAAKC,eAAS,EAAEC,MAAM,CAACK;AAAvBP,oBACEA;AAAIC,eAAS,EAAEC,MAAM,CAACM;AAAtBR,OAA2BF,KAA3BE,CADFA,eAEEA;AAAMC,eAAS,EAAEC,MAAM,CAACO;AAAxBT,MAFFA,CADF,GAME,IARNA,EAWI,CAACnF,aAAD,gBAEImF;AAAKC,eAAS,EAAEC,MAAM,CAACQ;AAAvBV,oBACEA;AAAKC,eAAS,EAAEC,MAAM,CAACS;AAAvBX,oBACEA;AACEY,aAAO,EACL;AAAA,eACEC,MAAI,CAACtG,KAAL,CAAWuG,iBAAX,CAA6BD,MAAI,CAACpG,KAAL,CAAWM,SAAxC,CADF;AAFJ;AAKEkF,eAAS,EAAKC,MAAM,CAACa,GAAPb,GAAL,GAAKA,GAAcA,MAAM,CAACc,UALrChB;AAMEiB,cAAQ,EAAE,KAAK1G,KAAL,CAAW2G;AANvBlB,gBADFA,eAWEA;AACEY,aAAO,EAAE,iBAACtF,CAAD;AAAA,eAAOuF,MAAI,CAAC7B,WAAL,CAAiB1D,CAAjB,CAAP;AADX;AAEE2E,eAAS,EAAKC,MAAM,CAACa,GAAPb,GAAL,GAAKA,GAAcA,MAAM,CAACiB;AAFrCnB,eAXFA,CADFA,eAmBEA;AAAKC,eAAS,EAAEC,MAAM,CAACkB;AAAvBpB,oBACEA;AAAKC,eAAS,EAAEC,MAAM,CAACmB;AAAvBrB,OAEIX,QAAQ,KAAK,IAAbA,IAAqBQ,WAArBR,gBAEIW;AAAOsB,cAAQ;AAAftB,oBACEA;AAAQuB,SAAG,EAAEzG,MAAM,CAAC,CAAD,CAAnBkF;AAAwBZ,UAAI,EAAC;AAA7BY,MADFA,eAEEA;AAAQuB,SAAG,EAAEzG,MAAM,CAAC,CAAD,CAAnBkF;AAAwBZ,UAAI,EAAC;AAA7BY,MAFFA,CAFJX,GAOE,IATNW,CADFA,eAaEA;AAAKC,eAAS,EAAEC,MAAM,CAACP;AAAvBK,oBACEA;AAAMC,eAAS,EAAEC,MAAM,CAACsB;AAAxBxB,OAEItF,IAAI,CAACsC,CAALtC,KAAW+G,SAAX/G,SACKA,IAAI,CAACsC,CAALtC,IAAU,CAAVA,GAAc,MAAMA,IAAI,CAACsC,CAAzBtC,GAA6BA,IAAI,CAACsC,CADvC,IAEE,IAJNgD,CADFA,eAQEA;AAAMC,eAAS,EAAEC,MAAM,CAACwB;AAAxB1B,WARFA,eASEA;AAAMC,eAAS,EAAEC,MAAM,CAAC7D;AAAxB2D,OAEItF,IAAI,CAACuC,CAALvC,KAAW+G,SAAX/G,SACKA,IAAI,CAACuC,CAALvC,IAAU,CAAVA,GAAc,MAAMA,IAAI,CAACuC,CAAzBvC,GAA6BA,IAAI,CAACuC,CADvC,IAEE,IAJN+C,CATFA,CAbFA,EA+BI,CAACpF,SAAD,gBAEIoF;AAAGC,eAAS,EAAEC,MAAM,CAACyB;AAArB3B,wCAFJ,GAIE,IAnCNA,CAnBFA,EA0DI,CAACpF,SAAD,gBAEIoF;AACEY,aAAO,EAAE,oBAAC;AAAA,eAAIC,MAAI,CAACvC,cAAL,CAAoBhD,CAApB,CAAJ;AADZ;AAEEsG,UAAI,EAAC,IAFP5B;AAGEC,eAAS,EAAEC,MAAM,CAAC2B;AAHpB7B,oBAMEA;AAAMC,eAAS,EAAEC,MAAM,CAAC4B;AAAxB9B,oBACEA;AAAKC,eAAS,EAAEC,MAAM,CAAC6B,YAAvB/B;AAAqCgC,aAAO,EAAC,KAA7ChC;AAAmDiC,WAAK,EAAC,4BAAzDjC;AAAsFkC,OAAC,EAAC,KAAxFlC;AAA8FmC,OAAC,EAAC,KAAhGnC;AAAsGoC,aAAO,EAAC,eAA9GpC;AAA8HqC,sBAAgB,EAAC;AAA/IrC,oBACEA,qDACEA;AAAMsC,OAAC,EAAC;AAARtC,MADFA,CADFA,CADFA,CANFA,CAFJ,gBAmBIA;AAAKC,eAAS,EAAEC,MAAM,CAACqC;AAAvBvC,oBACEA;AACEY,aAAO,EAAE,oBAAC;AAAA,eAAIC,MAAI,CAACpC,aAAL,CAAmBnD,CAAnB,CAAJ;AADZ;AAEEsG,UAAI,EAAC,IAFP5B;AAGEC,eAAS,EAAKC,MAAM,CAACsC,KAAPtC,GAAL,GAAKA,GAAgBA,MAAM,CAACpB;AAHvCkB,oBAKEA;AAAMC,eAAS,EAAEC,MAAM,CAACuC;AAAxBzC,MALFA,CADFA,eAWEA;AACEY,aAAO,EACL,CAAChF,WAAD,GACE,aAAC;AAAA,eAAIiF,MAAI,CAACxF,gBAAL,CAAsBC,CAAtB,CAAJ;AADH,UAEE,aAAC;AAAA,eAAIuF,MAAI,CAAChF,gBAAL,CAAsBP,CAAtB,CAAJ;AAJP;AAMEsG,UAAI,EAAC,IANP5B;AAOEC,eAAS,EAAKC,MAAM,CAACsC,KAAPtC,GAAL,GAAKA,GAAgBA,MAAM,CAACxE;AAPvCsE,OAUIpE,WAAW,gBACToE;AAAMC,eAAS,EAAEC,MAAM,CAACwC;AAAxB1C,MADS,gBAETA;AAAMC,eAAS,EAAEC,MAAM,CAACyC;AAAxB3C,MAZNA,CAXFA,CA7ERA,CAFJ,gBA+GIA;AAAG4C,WAAK,EAAE;AAAEC,aAAK,EAAE,MAAT;AAAiBC,iBAAS,EAAE,EAA5B;AAAgCC,gBAAQ,EAAE;AAA1C;AAAV/C,mCA1HRA,CADFA,CADFA,CADF;AAsID;;;CArTG1F,CAAiB0I,SAAjB1I;;AA0TNA,QAAQ,CAAC2I,YAAT3I,GAAwB;AACtBgG,YAAU,EAAE,KADU;AAEtB1C,4BAA0B,EAAE,IAFN;AAGtBzB,iBAAe,EAAE,yBAAC8B,IAAD,EAAU;AAHL,CAAxB3D","names":["audioType","Recorder","props","_this","state","time","miliseconds","recording","medianotFound","audios","audioBlob","stream","timer","startTimer","bind","countDown","handleAudioPause","e","preventDefault","clearInterval","mediaRecorder","pause","setState","pauseRecord","handleAudioStart","resume","setInterval","prevState","_this2","milisecondsToTime","handleCountDown","milisecs","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","obj","h","m","s","ms","initRecorder","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","audio","_this4","mimeTypeToUseWhenRecording","MediaRecorder","mimeType","chunks","ondataavailable","data","size","push","console","log","startRecording","_this6","start","stopRecording","getAudioTracks","tracks","forEach","track","stop","saveAudio","handleReset","_this7","blob","Blob","type","audioURL","window","URL","createObjectURL","handleAudioStop","url","duration","render","showUIAudio","title","disableFullUI","React","className","styles","recorder_library_box","recorder_box","recorder_box_inner","hideHeader","reco_header","h2","close_icons","record_section","btn_wrapper","onClick","_this8","handleAudioUpload","btn","upload_btn","disabled","uploadButtonDisabled","clear_btn","duration_section","audio_section","controls","src","mins","undefined","divider","help","href","mic_icon","microphone_icon_sec","mic_icon_svg","version","xmlns","x","y","viewBox","enableBackground","d","record_controller","icons","stop_icon","play_icons","pause_icons","style","color","marginTop","fontSize","Component","defaultProps"],"sources":["../src/components/Recorder.js"],"sourcesContent":["import React, { Component } from 'react';\nimport microphone from './../imgs/microphone.svg';\nimport stopIcon from './../imgs/stop.png';\nimport pauseIcons from './../imgs/pause.png';\nimport playIcons from './../imgs/play-button.png';\nimport closeIcons from './../imgs/close.png';\nimport styles from '../styles.module.css';\nconst audioType = 'audio/*';\n\nclass Recorder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null,\n      stream: null\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({ pauseRecord: true });\n  }\n\n  handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({ pauseRecord: false });\n  }\n\n  startTimer() {\n    // if (this.timer === 0 && this.state.seconds > 0) {\n    this.timer = setInterval(this.countDown, 100);\n    // }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n\n    this.setState(prevState => {\n      const miliseconds = prevState.miliseconds + 100;\n      return ({ time: this.milisecondsToTime(miliseconds), miliseconds: miliseconds });\n    });\n    \n    if(this.props.handleCountDown){\n      this.props.handleCountDown(this.state.time);\n    }\n    \n  }\n\n  milisecondsToTime(milisecs) {\n\n    let secs = milisecs / 1000;\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n      ms: milisecs\n    };\n    return obj;\n  }\n\n  async initRecorder() {\n    navigator.getUserMedia =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    navigator.msGetUserMedia;\n    if (navigator.mediaDevices) {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      if (this.props.mimeTypeToUseWhenRecording) {\n        this.mediaRecorder = new MediaRecorder(stream, { mimeType: this.props.mimeTypeToUseWhenRecording });\n      } else {\n        this.mediaRecorder = new MediaRecorder(stream);\n      }\n      this.chunks = [];\n      this.mediaRecorder.ondataavailable = e => {\n        if (e.data && e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      };\n\n      this.stream = stream;\n    } else {\n      this.setState({ medianotFound: true });\n      console.log('Media Decives will work only with SSL.....');\n    }\n  }\n\n  async startRecording(e) {\n    e.preventDefault();\n    // wipe old data chunks\n    this.chunks = [];\n\n    await this.initRecorder();\n    // start recorder with 10ms buffer\n    this.mediaRecorder.start(10);\n    this.startTimer();\n    // say that we're recording\n    this.setState({ recording: true });\n  }\n\n  stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({ time: {} });\n    e.preventDefault();\n    // stop the recorder\n\n    if (this.stream.getAudioTracks) {\n      const tracks = this.stream.getAudioTracks();\n      tracks.forEach((track) => {\n        track.stop();\n      });\n    } else {\n      console.log('No Tracks Found')\n    }\n\n    this.mediaRecorder.stop();\n\n    // say that we're not recording\n    this.setState({ recording: false, pauseRecord: false, });\n    // save the video to memory\n    this.saveAudio();\n  }\n\n  handleReset(e) {\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n    this.setState({\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, () => {\n\n      this.props.handleReset(this.state);\n    });\n\n  }\n\n  saveAudio() {\n    // convert saved chunks to blob\n    const blob = new Blob(this.chunks, { type: audioType });\n    // generate video url from blob\n    const audioURL = window.URL.createObjectURL(blob);\n    // append videoURL to list of saved videos for rendering\n    const audios = [audioURL];\n    this.setState({ audios, audioBlob: blob });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  }\n\n  render() {\n    const { recording, audios, time, medianotFound, pauseRecord } = this.state;\n    const { showUIAudio, title, audioURL, disableFullUI } = this.props;\n\n    if (disableFullUI) { return null; }\n\n    return (\n      <div className={styles.recorder_library_box}>\n        <div className={styles.recorder_box}>\n          <div className={styles.recorder_box_inner}>\n            {\n              !this.props.hideHeader ?\n                <div className={styles.reco_header}>\n                  <h2 className={styles.h2}>{title}</h2>\n                  <span className={styles.close_icons}>\n                  </span>\n                </div> :\n                null\n            }\n            {\n              !medianotFound ?\n                (\n                  <div className={styles.record_section}>\n                    <div className={styles.btn_wrapper}>\n                      <button\n                        onClick={\n                          () =>\n                            this.props.handleAudioUpload(this.state.audioBlob)\n                        }\n                        className={`${styles.btn} ${styles.upload_btn}`}\n                        disabled={this.props.uploadButtonDisabled}\n                      >\n                    Upload\n                      </button>\n                      <button\n                        onClick={(e) => this.handleReset(e)}\n                        className={`${styles.btn} ${styles.clear_btn}`}\n                      >\n                    Clear\n                      </button>\n                    </div>\n                    <div className={styles.duration_section}>\n                      <div className={styles.audio_section}>\n                        {\n                          audioURL !== null && showUIAudio ?\n                            (\n                              <audio controls>\n                                <source src={audios[0]} type='audio/ogg' />\n                                <source src={audios[0]} type='audio/mpeg' />\n                              </audio>\n                            ) :\n                            null\n                        }\n                      </div>\n                      <div className={styles.duration}>\n                        <span className={styles.mins}>\n                          {\n                            time.m !== undefined ?\n                              `${time.m <= 9 ? '0' + time.m : time.m}` :\n                              '00'\n                          }\n                        </span>\n                        <span className={styles.divider}>:</span>\n                        <span className={styles.secs}>\n                          {\n                            time.s !== undefined ?\n                              `${time.s <= 9 ? '0' + time.s : time.s}` :\n                              '00'\n                          }\n                        </span>\n                      </div>\n                      {\n                        !recording ?\n                          (\n                            <p className={styles.help}>Press the microphone to record</p>\n                          ) :\n                          null\n                      }\n                    </div>\n                    {\n                      !recording ?\n                        (\n                          <a\n                            onClick={e => this.startRecording(e)}\n                            href=' #'\n                            className={styles.mic_icon}\n                          >\n                            {/* <img src={microphone} width={30} height={30} alt=\"Microphone icons\" /> */}\n                            <span className={styles.microphone_icon_sec}>\n                              <svg className={styles.mic_icon_svg} version='1.1' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 1000' enableBackground='new 0 0 1000 1000' >\n                                <g>\n                                  <path d='M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z' />\n                                </g>\n                              </svg>\n\n                            </span>\n                          </a>\n                        ) :\n                        (\n                          <div className={styles.record_controller}>\n                            <a\n                              onClick={e => this.stopRecording(e)}\n                              href=' #'\n                              className={`${styles.icons} ${styles.stop}`}\n                            >\n                              <span className={styles.stop_icon}></span>\n                              {/* <img src={stopIcon} width={20} height={20} alt=\"Stop icons\" /> */}\n\n                              {/* <span className={`${styles.icons} ${styles.FaStop}`}></span> */}\n                            </a>\n                            <a\n                              onClick={\n                                !pauseRecord ?\n                                  e => this.handleAudioPause(e) :\n                                  e => this.handleAudioStart(e)\n                              }\n                              href=' #'\n                              className={`${styles.icons} ${styles.pause}`}\n                            >\n                              {\n                                pauseRecord ?\n                                  <span className={styles.play_icons}></span> :\n                                  <span className={styles.pause_icons}></span>\n                              }\n                            </a>\n                          </div>\n                        )\n                    }\n                  </div>\n                ) :\n                (\n                  <p style={{ color: '#fff', marginTop: 30, fontSize: 25 }}>\n                  Seems the site is Non-SSL\n                  </p>\n                )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recorder;\n\nRecorder.defaultProps = {\n  hideHeader: false,\n  mimeTypeToUseWhenRecording: null,\n  handleCountDown: (data) => {},\n}\n"]},"metadata":{},"sourceType":"module"}