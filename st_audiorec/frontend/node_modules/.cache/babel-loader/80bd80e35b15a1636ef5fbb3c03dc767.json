{"ast":null,"code":"var _jsxFileName = \"/Users/stefan_rmmr/software_dev/beat_inspector/my_component/frontend/src/_MyComponent.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport { ReactMediaRecorder } from \"react-media-recorder\";\n\nclass AudioRecorder extends StreamlitComponentBase {\n  constructor() {\n    super(...arguments);\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ReactMediaRecorder, {\n        audio: true,\n        render: _ref => {\n          let {\n            status,\n            startRecording,\n            stopRecording,\n            mediaBlobUrl\n          } = _ref;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }\n          }, status), /*#__PURE__*/React.createElement(\"button\", {\n            onClick: startRecording,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }\n          }, \"Start Recording\"), /*#__PURE__*/React.createElement(\"button\", {\n            onClick: stopRecording,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }\n          }, \"Stop Recording\"), /*#__PURE__*/React.createElement(\"audio\", {\n            src: mediaBlobUrl,\n            controls: true,\n            autoPlay: true,\n            loop: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }));\n    };\n  }\n\n} // export an object of class MyComponent!\n\n\nexport default withStreamlitConnection(AudioRecorder); // You don't need to edit withStreamlitConnection (but you're welcome to!).\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\n\nStreamlit.setComponentReady();","map":{"version":3,"sources":["/Users/stefan_rmmr/software_dev/beat_inspector/my_component/frontend/src/_MyComponent.tsx"],"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","ReactMediaRecorder","AudioRecorder","render","status","startRecording","stopRecording","mediaBlobUrl","setComponentReady"],"mappings":";AAAA,SACEA,SADF,EAEEC,sBAFF,EAGEC,uBAHF,QAIO,yBAJP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;;AAIA,MAAMC,aAAN,SAA4BJ,sBAA5B,CAAkD;AAAA;AAAA;;AAAA,SAEzCK,MAFyC,GAEhC,MAAiB;AAE/B,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,kBAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,MAAM,EAAE;AAAA,cAAC;AAAEC,YAAAA,MAAF;AAAUC,YAAAA,cAAV;AAA0BC,YAAAA,aAA1B;AAAyCC,YAAAA;AAAzC,WAAD;AAAA,8BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIH,MAAJ,CADF,eAEE;AAAQ,YAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,eAGE;AAAQ,YAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHF,eAIE;AAAO,YAAA,GAAG,EAAEC,YAAZ;AAA0B,YAAA,QAAQ,MAAlC;AAAmC,YAAA,QAAQ,MAA3C;AAA4C,YAAA,IAAI,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADM;AAAA,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAeD,KAnB+C;AAAA;;AAAA,C,CAsBlD;;;AACA,eAAeR,uBAAuB,CAACG,aAAD,CAAtC,C,CACA;AAEA;AACA;;AACAL,SAAS,CAACW,iBAAV","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\nimport React from \"react\"\nimport { ReactMediaRecorder } from \"react-media-recorder\";\n\n\n\nclass AudioRecorder extends StreamlitComponentBase{\n\n  public render = (): ReactNode => {\n\n    return (\n      <div>\n        <ReactMediaRecorder\n          audio\n          render={({ status, startRecording, stopRecording, mediaBlobUrl }) => (\n            <div>\n              <p>{status}</p>\n              <button onClick={startRecording}>Start Recording</button>\n              <button onClick={stopRecording}>Stop Recording</button>\n              <audio src={mediaBlobUrl} controls autoPlay loop />\n            </div>\n          )}\n        />\n      </div>\n    )\n  }\n}\n\n// export an object of class MyComponent!\nexport default withStreamlitConnection(AudioRecorder)\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n"]},"metadata":{},"sourceType":"module"}