{"ast":null,"code":"import _classCallCheck from\"/Users/stefan_rmmr/software_dev/beat_inspector/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/stefan_rmmr/software_dev/beat_inspector/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/stefan_rmmr/software_dev/beat_inspector/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/stefan_rmmr/software_dev/beat_inspector/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import React from\"react\";import AudioReactRecorder,{RecordState}from'audio-react-recorder';import'audio-react-recorder/dist/index.css';var StAudioRec=/*#__PURE__*/function(_StreamlitComponentBa){_inherits(StAudioRec,_StreamlitComponentBa);var _super=_createSuper(StAudioRec);function StAudioRec(){var _this;_classCallCheck(this,StAudioRec);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isFocused:false,recordState:null,audioDataURI:'',audioDataURL:'',reset:false};_this.render=function(){// Arguments that are passed to the plugin in Python are accessible\n// Streamlit sends us a theme object via props that we can use to ensure\n// that our component has visuals that match the active theme in a\n// streamlit app.\nvar theme=_this.props.theme;var style={};var recordState=_this.state.recordState;// compatibility with older vers of Streamlit that don't send theme object.\nif(theme){// Use the theme object to style our button border. Alternatively, the\n// theme style is defined in CSS vars.\nvar borderStyling=\"1px solid \".concat(_this.state.isFocused?theme.primaryColor:\"gray\");style.border=borderStyling;style.outline=borderStyling;}return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{id:\"record\",onClick:_this.onClick_start},\"Start Recording\"),/*#__PURE__*/React.createElement(\"button\",{id:\"stop\",onClick:_this.onClick_stop},\"Stop\"),/*#__PURE__*/React.createElement(\"button\",{id:\"reset\",onClick:_this.onClick_reset},\"Reset\"),/*#__PURE__*/React.createElement(AudioReactRecorder,{state:recordState,onStop:_this.onStop_audio,type:\"audio/wav\",backgroundColor:\"rgb(15, 17, 22)\",foregroundColor:\"rgb(227, 252, 3)\",canvasWidth:450,canvasHeight:100}),/*#__PURE__*/React.createElement(\"audio\",{id:\"audio\",controls:true,src:_this.state.audioDataURI}),/*#__PURE__*/React.createElement(\"button\",{id:\"continue\",onClick:_this.onClick_continue},\"Continue to Analysis\")));};_this.onClick_start=function(){_this.setState({reset:false,audioDataURI:'',recordState:RecordState.START});Streamlit.setComponentValue('');};_this.onClick_stop=function(){_this.setState({reset:false,recordState:RecordState.STOP});};_this.onClick_reset=function(){_this.setState({reset:true,audioDataURI:'',recordState:RecordState.STOP});Streamlit.setComponentValue('');};_this.onClick_continue=function(){if(_this.state.audioDataURI!==''){Streamlit.setComponentValue(_this.state.audioDataURL);}};_this.onStop_audio=function(data){if(_this.state.reset===true){_this.setState({audioDataURI:''});Streamlit.setComponentValue('');}else{// Usage\n_this.downloadBlob(data,'audiofile.wav');_this.setState({audioDataURI:data.url});}};return _this;}_createClass(StAudioRec,[{key:\"downloadBlob\",value:function downloadBlob(blob){var name=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'audiofile.wav';// get blob object url from blob\nvar blobUrl=blob.url;// create link object ffor blob\nvar link=document.createElement(\"a\");// Set link's href to point to the Blob URL\nlink.href=blobUrl;link.download=name;this.setState({audioDataURL:link});// Append link to the body\n// document.body.appendChild(link);\n// Dispatch click event on the link\n//link.dispatchEvent(\n//  new MouseEvent('click', {\n//    bubbles: true,\n//    cancelable: true,\n//    view: window\n//  })\n//);\n// Remove link from body\n// document.body.removeChild(link);\n}}]);return StAudioRec;}(StreamlitComponentBase);// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(StAudioRec);// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady();// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight();","map":{"version":3,"sources":["/Users/stefan_rmmr/software_dev/beat_inspector/st_audiorec/frontend/src/StreamlitAudioRecorder.tsx"],"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","AudioReactRecorder","RecordState","StAudioRec","state","isFocused","recordState","audioDataURI","audioDataURL","reset","render","theme","props","style","borderStyling","primaryColor","border","outline","onClick_start","onClick_stop","onClick_reset","onStop_audio","onClick_continue","setState","START","setComponentValue","STOP","data","downloadBlob","url","blob","name","blobUrl","link","document","createElement","href","download","setComponentReady","setFrameHeight"],"mappings":"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","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder'\nimport 'audio-react-recorder/dist/index.css'\n\ninterface State {\n  isFocused: boolean\n  recordState: null\n  audioDataURI: string\n  audioDataURL: string\n  reset: boolean\n}\n\nclass StAudioRec extends StreamlitComponentBase<State> {\n  public state = { isFocused: false, recordState: null, audioDataURI: '', audioDataURL: '', reset: false}\n\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n\n    // Streamlit sends us a theme object via props that we can use to ensure\n    // that our component has visuals that match the active theme in a\n    // streamlit app.\n    const { theme } = this.props\n    const style: React.CSSProperties = {}\n\n    const { recordState } = this.state\n\n    // compatibility with older vers of Streamlit that don't send theme object.\n    if (theme) {\n      // Use the theme object to style our button border. Alternatively, the\n      // theme style is defined in CSS vars.\n      const borderStyling = `1px solid ${\n        this.state.isFocused ? theme.primaryColor : \"gray\"}`\n      style.border = borderStyling\n      style.outline = borderStyling\n    }\n\n    return (\n      <span>\n        <div>\n          <button id='record' onClick={this.onClick_start}>\n            Start Recording\n          </button>\n          <button id='stop' onClick={this.onClick_stop}>\n            Stop\n          </button>\n          <button id='reset' onClick={this.onClick_reset}>\n            Reset\n          </button>\n\n          <AudioReactRecorder\n            state={recordState}\n            onStop={this.onStop_audio}\n            type='audio/wav'\n            backgroundColor='rgb(15, 17, 22)'\n            foregroundColor='rgb(227, 252, 3)'\n            canvasWidth={450}\n            canvasHeight={100}\n          />\n\n          <audio\n            id='audio'\n            controls\n            src={this.state.audioDataURI}\n          />\n\n          <button id='continue' onClick={this.onClick_continue}>\n            Continue to Analysis\n          </button>\n\n        </div>\n      </span>\n    )\n  }\n\n  private onClick_start = () => {\n    this.setState({\n      reset: false,\n      audioDataURI: '',\n      recordState: RecordState.START\n    })\n    Streamlit.setComponentValue('')\n  }\n\n  private onClick_stop = () => {\n    this.setState({\n      reset: false,\n      recordState: RecordState.STOP\n    })\n  }\n\n  private onClick_reset = () => {\n    this.setState({\n      reset: true,\n      audioDataURI: '',\n      recordState: RecordState.STOP\n    })\n    Streamlit.setComponentValue('')\n  }\n\n  private onClick_continue = () => {\n    if (this.state.audioDataURI !== '')\n    {\n      Streamlit.setComponentValue(this.state.audioDataURL)\n    }\n  }\n\n  private downloadBlob(blob, name = 'audiofile.wav') {\n\n    // get blob object url from blob\n    const blobUrl = blob.url\n    // create link object ffor blob\n    const link = document.createElement(\"a\");\n    // Set link's href to point to the Blob URL\n    link.href = blobUrl;\n    link.download = name;\n\n    this.setState({\n      audioDataURL: link\n    })\n\n    // Append link to the body\n    // document.body.appendChild(link);\n    // Dispatch click event on the link\n    //link.dispatchEvent(\n    //  new MouseEvent('click', {\n    //    bubbles: true,\n    //    cancelable: true,\n    //    view: window\n    //  })\n    //);\n    // Remove link from body\n    // document.body.removeChild(link);\n  }\n\n  private onStop_audio = (data) => {\n    if (this.state.reset === true)\n    {\n      this.setState({\n        audioDataURI: ''\n      })\n      Streamlit.setComponentValue('')\n    }else{\n\n      // Usage\n      this.downloadBlob(data, 'audiofile.wav');\n\n      this.setState({\n        audioDataURI: data.url\n      })\n    }\n  }\n\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(StAudioRec)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight()\n"]},"metadata":{},"sourceType":"module"}